node {
    stage('Release scan orchestrator') {
        def projects = [:]
        def snyk_org = "4c961058-b36e-4510-894f-99d3f39d3498"
        def snyk_scan = "monitor"

	projects['SBE'] = {
            build job: 'executor', parameters: [
                string(name: 'snyk_org', value: snyk_org),
                string(name: 'git_repo', value: "github.com/SymphonyOSF/SBE.git"),
                string(name: 'git_hash', value: "20.13"),
                string(name: 'prj_type', value: "java"),
                string(name: 'java_version', value: '8'),
                string(name: 'java_params', value: "-DsymphonySkipUnitTests=true -DsymphonySkipIntegrationTests=true -PSymphony,SharedResources"),
                string(name: 'snyk_scan', value: snyk_scan)
            ],
            wait: true
        }

        projects['SFE-Client-App'] = {
            build job: 'executor', parameters: [
                string(name: 'snyk_org', value: snyk_org),
                string(name: 'git_repo', value: "github.com/SymphonyOSF/SFE-Client-App.git"),
                string(name: 'git_hash', value: "20.13"),
                string(name: 'prj_type', value: 'nodejs'),
                string(name: 'snyk_scan', value: snyk_scan)
            ],
            wait: true
        }

        projects['SFE-Login'] = {
            build job: 'executor', parameters: [
                string(name: 'snyk_org', value: snyk_org),
                string(name: 'git_repo', value: "github.com/SymphonyOSF/SFE-Login.git"),
                string(name: 'git_hash', value: "20.13"),
                string(name: 'prj_type', value: 'nodejs'),
                string(name: 'snyk_scan', value: snyk_scan)
            ],
            wait: true
        }

        projects['SFE-Admin-Compliance'] = {
            build job: 'executor', parameters: [
                string(name: 'snyk_org', value: snyk_org),
                string(name: 'git_repo', value: "github.com/SymphonyOSF/SFE-Admin-Compliance.git"),
                string(name: 'git_hash', value: "20.13"),
                string(name: 'prj_type', value: 'nodejs'),
                string(name: 'snyk_scan', value: snyk_scan)
            ],
            wait: true
        }


        projects['Embedded-Chat'] = {
            build job: 'executor', parameters: [
                string(name: 'snyk_org', value: snyk_org),
                string(name: 'git_repo', value: "github.com/SymphonyOSF/Embedded-Chat.git"),
                string(name: 'git_hash', value: "dev"),
                string(name: 'prj_type', value: 'nodejs'),
                string(name: 'snyk_scan', value: snyk_scan)
            ],
            wait: true
        }

        //projects['BFF'] = {
        //    build job: 'executor', parameters: [
        //        string(name: 'snyk_org', value: snyk_org),
        //        string(name: 'git_repo', value: "github.com/SymphonyOSF/BFF.git"),
        //        string(name: 'git_hash', value: "release/21.9"),
        //        string(name: 'prj_type', value: 'java'),
        //        string(name: 'java_version', value: '11'),
        //        string(name: 'java_params', value: "-Dskip.unit.test=true"),
        //        string(name: 'snyk_exclude', value: 'api-specification,generated-test-sources,generated-sources'),
        //        string(name: 'snyk_scan', value: snyk_scan)
        //    ],
        //    wait: true
        //}

        // projects['SymphonyLibrary'] = {
        //     build job: 'executor', parameters: [
        //         string(name: 'snyk_org', value: snyk_org),
        //         string(name: 'git_repo', value: "github.com/SymphonyOSF/SymphonyLibrary.git"),
        //         string(name: 'git_hash', value: "master"),
        //         string(name: 'prj_type', value: 'java'),
        //         string(name: 'java_version', value: '8'),
        //         string(name: 'java_params', value: "-DskipTests=true"),
        //         string(name: 'snyk_scan', value: snyk_scan)
        //     ],
        //     wait: true
        // }

	projects['SBE-Clouds'] = {
            build job: 'executor', parameters: [
                string(name: 'snyk_org', value: snyk_org),
                string(name: 'git_repo', value: "github.com/SymphonyOSF/SBE-Clouds.git"),
                string(name: 'git_hash', value: "master"),
                string(name: 'prj_type', value: 'java'),
                string(name: 'java_version', value: '8'),
                string(name: 'java_params', value: "-DskipTests=true"),
                string(name: 'snyk_scan', value: snyk_scan)
            ],
            wait: true
        }

        // projects['Caching-Lib'] = {
        //     build job: 'executor', parameters: [
        //         string(name: 'snyk_org', value: snyk_org),
        //         string(name: 'git_repo', value: "github.com/SymphonyOSF/Caching-Lib.git"),
        //         string(name: 'git_hash', value: "master"),
        //         string(name: 'prj_type', value: 'java'),
        //         string(name: 'java_version', value: '8'),
        //         string(name: 'java_params', value: "-DskipTests=true"),
        //         string(name: 'snyk_exclude', value: 'cache-integration-tests'),
        //         string(name: 'snyk_scan', value: snyk_scan)
        //     ],
        //     wait: true
        // }

	projects['symphony-profile-manager'] = {
            build job: 'executor', parameters: [
                string(name: 'snyk_org', value: snyk_org),
                string(name: 'git_repo', value: "github.com/SymphonyOSF/symphony-profile-manager.git"),
                string(name: 'git_hash', value: "master"),
                string(name: 'prj_type', value: 'java'),
                string(name: 'java_version', value: '11'),
                string(name: 'java_params', value: "-Dmaven.test.skip=true"),
                string(name: 'snyk_scan', value: snyk_scan)
            ],
            wait: true
        }

	// projects['SFE-Lite'] = {
    //         build job: 'executor', parameters: [
    //             string(name: 'snyk_org', value: snyk_org),
    //             string(name: 'git_repo', value: "github.com/SymphonyOSF/SFE-Lite.git"),
    //             string(name: 'git_hash', value: "21.9   "),
    //             string(name: 'prj_type', value: 'nodejs'),
    //             string(name: 'node_version', value: '12.18.3'),
    //             string(name: 'yarn_version', value: '1.15.2'),
    //             string(name: 'snyk_scan', value: snyk_scan)
    //         ],
    //         wait: true
    //     }

    projects['symphony-agent'] = {
            build job: 'executor', parameters: [
                string(name: 'snyk_org', value: snyk_org),
                string(name: 'git_repo', value: "github.com/SymphonyOSF/symphony-agent.git"),
                string(name: 'git_hash', value: "master"),
                string(name: 'prj_type', value: "java"),
                string(name: 'java_version', value: '8'),
                string(name: 'java_params', value: '-DskipTests=true'),
                string(name: 'snyk_scan', value: snyk_scan)
            ],
            wait: true
        }

    projects['symprox'] = {
            build job: 'executor', parameters: [
                string(name: 'snyk_org', value: snyk_org),
                string(name: 'git_repo', value: "github.com/SymphonyOSF/symprox.git"),
                string(name: 'git_hash', value: "20.13"),
                string(name: 'prj_type', value: "java"),
                string(name: 'java_version', value: '8'),
                string(name: 'java_params', value: '-DskipTests=true'),
                string(name: 'snyk_exclude', value: 'harpo-integration-tests,harpo-replay-plugin,performance_test,re2,symproxy-re2-plugin,symproxy-replay-assistant,symproxy-replay-driver,symproxy-replay-performance-tests,symproxy-replay-plugin'),
                string(name: 'snyk_scan', value: snyk_scan)
            ],
            wait: true
        }

    // projects['rtc-sip-bridge'] = {
    //         build job: 'executor', parameters: [
    //             string(name: 'snyk_org', value: snyk_org),
    //             string(name: 'git_repo', value: "github.com/SymphonyOSF/rtc-sip-bridge.git"),
    //             string(name: 'git_hash', value: "rc-current-r20.15"),
    //             string(name: 'prj_type', value: "java"),
    //             string(name: 'java_version', value: '8'),
    //             string(name: 'java_params', value: '-DskipTests=true'),
    //             string(name: 'snyk_scan', value: snyk_scan)
    //         ],
    //         wait: true
    //     }   
    
    //  projects['rtc-conference-service'] = {
    //         build job: 'executor', parameters: [
    //             string(name: 'snyk_org', value: snyk_org),
    //             string(name: 'git_repo', value: "github.com/SymphonyOSF/rtc-conference-service.git"),
    //             string(name: 'git_hash', value: "rc-current-r20.15"),
    //             string(name: 'prj_type', value: "java"),
    //             string(name: 'java_version', value: '11'),
    //             string(name: 'java_params', value: '-Dskip.tests=true -Dskip.integration.tests=true'),
    //             string(name: 'snyk_exclude', value: "tools"),
    //             string(name: 'snyk_scan', value: snyk_scan)
    //         ],
    //         wait: true
    //     }

    // projects['rtc-media-bridge'] = {
    //         build job: 'executor', parameters: [
    //             string(name: 'snyk_org', value: snyk_org),
    //             string(name: 'git_repo', value: "github.com/SymphonyOSF/rtc-media-bridge.git"),
    //             string(name: 'git_hash', value: "rc-current-r20.15"),
    //             string(name: 'prj_type', value: "java"),
    //             string(name: 'java_version', value: '8'),
    //             string(name: 'java_params', value: '-DskipTests=true'),
    //             string(name: 'snyk_scan', value: snyk_scan)
    //         ],
    //         wait: true
    //     }



        parallel projects
    }
}
