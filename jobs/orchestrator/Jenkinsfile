node {
    stage('Release scan orchestrator') {
        def projects = [:]
        def snyk_org = "1533ded9-dcfa-4e40-ba01-3e05f03b60e0"
        def snyk_scan = "monitor"

        projects['SFE-Client-App'] = {
            build job: 'executor', parameters: [
                string(name: 'snyk_org', value: snyk_org),
                string(name: 'git_repo', value: "github.com/SymphonyOSF/SFE-Client-App.git"),
                string(name: 'git_hash', value: "20.12"),
                string(name: 'prj_type', value: 'nodejs'),
                string(name: 'snyk_scan', value: snyk_scan)
            ],
            wait: true
        }

        // projects['SBE'] = {
        //     build job: 'executor', parameters: [
        //         string(name: 'snyk_org', value: snyk_org),
        //         string(name: 'git_repo', value: "github.com/SymphonyOSF/SBE.git"),
        //         string(name: 'git_hash', value: "20.12"),
        //         string(name: 'prj_type', value: "java"),
        //         string(name: 'java_version', value: '8'),
        //         string(name: 'java_params', value: "-DsymphonySkipUnitTests=true -DsymphonySkipIntegrationTests=true -PSymphony,SharedResources"),
        //         string(name: 'snyk_scan', value: snyk_scan)
        //     ],
        //     wait: true
        // }

        projects['rtc-conference-service'] = {
            build job: 'executor', parameters: [
                string(name: 'snyk_org', value: snyk_org),
                string(name: 'git_repo', value: "github.com/SymphonyOSF/rtc-conference-service.git"),
                string(name: 'git_hash', value: "rc-current-r20.12"),
                string(name: 'prj_type', value: "java"),
                string(name: 'java_version', value: '11'),
                string(name: 'java_params', value: "-Dskip.tests=true -Dskip.integration.tests=true"),
                string(name: 'snyk_exclude', value: "tools"),
                string(name: 'snyk_scan', value: snyk_scan)
            ],
            wait: true
        }

        parallel projects
    }
}